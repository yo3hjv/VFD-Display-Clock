/*
 * VFD Clock rev 8
 * Month with name
 * Date, UTC time, Local time
 * 
 * Author: YO3HJV, Adrian
 * If you like it and use it, please send me an e-mail
 * at: yo3hjv@gmail.com with a nice picture from your QTH or surroundings.
 * 
 */



#include <Wire.h>
#include <TimeLib.h>
#include <DS1307RTC.h>
#include <SoftwareSerial.h>
SoftwareSerial mySerial(3, 2); // RX, TX


void setup() {
  Serial.begin(9600);
  while (!Serial) ; // wait for serial
  delay(200);
  Serial.println("DS1307RTC Read Test");
  Serial.println("-------------------");

    mySerial.begin(9600);
    delay(10);
    mySerial.write(0x0C);   // Clear ALL
    delay(10);

// Display init
         mySerial.write(0x1B);
         mySerial.write(40);
         fixedVFD();
}

void fixedVFD(){
    mySerial.write(0x1F);   // Set cursor
    mySerial.write(0x24);   // Set Cursor
    mySerial.write(1);      // position x
    mySerial.write(1);      // position y
      mySerial.write("UT");

    //  insert DATE dd/mm/yy

    mySerial.write(0x1F);   // Set cursor
    mySerial.write(0x24);   // Set Cursor
    mySerial.write(19);      // position x
    mySerial.write(1);      // position y  
       mySerial.write("LT");  
  
}

void loop() {
           
              utcVFD();
              loctimeVFD();
              dateVFD();

}

void dateVFD(){
     tmElements_t tm;
     RTC.read(tm);     
 
// set cursor for  DATE   DD MMM YY 
    mySerial.write(0x1F);   // Set cursor
    mySerial.write(0x24);   // Set Cursor
    mySerial.write(6);      // position x
    mySerial.write(1);      // position y

        niceTime(tm.Day);
  
     
    switch(tm.Month){
      case 1: mySerial.print(" Jan ");
      case 2: mySerial.print(" Feb ");
      case 3: mySerial.print(" Mar ");
      case 4: mySerial.print(" Apr ");
      case 5: mySerial.print(" May ");
      case 6: mySerial.print(" Jun ");
      case 7: mySerial.print(" Jul ");
      case 8: mySerial.print(" Aug ");
      case 9: mySerial.print(" Sep ");
      case 10: mySerial.print(" Oct ");
      case 11: mySerial.print(" Nov ");
      case 12: mySerial.print("-Dec-");
      //default: mySerial.print(" ERR ");
      break;
              
    }
        mySerial.println(tmYearToCalendar(tm.Year));
    }


void utcVFD(){
      
     tmElements_t tm;
     RTC.read(tm);

 
// set cursor for  UTC TIME 
    mySerial.write(0x1F);   // Set cursor
    mySerial.write(0x24);   // Set Cursor
    mySerial.write(1);      // position x
    mySerial.write(2);      // position y

// print UTC TIME on VFD with nice 0 when only one digit
    niceTime((tm.Hour-2));   // local time offset.
    mySerial.write(':');
    niceTime(tm.Minute);
    mySerial.write(':');
    niceTime(tm.Second);
           }


   
void loctimeVFD(){
      
     tmElements_t tm;
     RTC.read(tm);     
 
// set cursor for  Local TIME 
    mySerial.write(0x1F);   // Set cursor
    mySerial.write(0x24);   // Set Cursor
    mySerial.write(13);      // position x
    mySerial.write(2);      // position y

// print UTC TIME on VFD with nice 0 when only one digit
    niceTime((tm.Hour));
    mySerial.write(':');
    niceTime(tm.Minute);
    mySerial.write(':');
    niceTime(tm.Second);
           }



void niceTime(int number) {
  if (number >= 0 && number < 10) {
    mySerial.write('0');
  }
  mySerial.print(number);
}





